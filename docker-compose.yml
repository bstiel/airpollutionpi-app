version: '3.4'
services:

  traefik:
    image: traefik:1.7.4
    command: --web --docker --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - gateway
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

  ui:
    build: .
    command: "gunicorn --bind 0.0.0.0:8000 --reload ui:app.server"
    image: &app app
    environment: &env
      - API_URL=http://api:8000
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:password@postgres:5432
    restart: 'no'
    volumes:
      - ./app:/app
    networks:
      - gateway
    labels:
      - traefik.docker.network=gateway
      - traefik.frontend.rule=PathPrefix:/
      - traefik.port=8000

  api:
    build: .
    command: "gunicorn --bind 0.0.0.0:8000 --reload app:app"
    image: *app
    environment: *env
    restart: 'no'
    volumes:
      - ./app:/app
    networks:
      - gateway
    labels:
      - traefik.docker.network=gateway
      - traefik.frontend.rule=PathPrefix:/api
      - traefik.port=8000

  db-migration:
    image: *app
    environment: *env
    command: [flask, db, upgrade]
    networks:
      - gateway
    volumes: ['./app:/app']

  postgres:
    image: postgres:11.0
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - gateway
    labels:
      - traefik.enable=false

volumes:
  pg-data:
    external: true

networks:
  gateway:
    external: true